<section class="flex justify-center p-3">
  <div class="flex flex-col items-center w-full gap-5">
    <% if current_user == @recipe.user %>
        <%= form_with model: @recipe, method: :patch, class: "public-form", data: { url: toggle_public_recipe_path(@recipe), recipe_id: @recipe.id } do |form| %>
        <div class="mt-3 flex items-center gap-2">
          <label class="switch">
            <input type="checkbox" <%= 'checked' if @recipe.public %> onchange="togglePublic(this)">
            <span class="slider"></span>
          </label>
          <%= form.label :public, "Public" %>
        </div>
      <% end %>
    <% end %>
    <div class="relative flex flex-col items-center p-4 border-2 border-gray-100 sm:px-24 rounded-2xl bg-clip-padding backdrop-filter backdrop-blur-3xl bg-gray-50">
      <div class="flex flex-col items-center gap-3">
        <h1 class="text-4xl font-bold text-center text-clamp-2">
          <%= @recipe.name %>
        </h1>
        <p class="text-sm text-center text-slate-400">
          by <%= @recipe.user.name %>
        </p>
        <p class="text-center text-slate-500 max-w-[35ch]">
          <%= @recipe.description %>
        </p>
        <div class="flex w-full justify-evenly">
          <div class="flex flex-col gap-2 py-3 text-center mr-4">
            <h2 class="capitalize">Prepartaion time</h2>
            <div class="flex text-sm justify-evenly">
              <% if @preparation_time_hours > 0 %>
                <%= "#{@preparation_time_hours} hr" %>
              <% end %>
              <% if @preparation_time_minutes > 0 %>
                <%= "#{@preparation_time_minutes} min" %>
              <% end %>
            </div>
          </div>
          <div class="flex flex-col gap-2 py-3 text-center mr-4">
            <h2 class="capitalize">Cooking time</h2>
            <div class="flex text-sm justify-evenly">
              <% if @cooking_time_hours > 0 %>
                <%= "#{@cooking_time_hours} hr" %>
              <% end %>
              <% if @cooking_time_minutes > 0 %>
                <%= "#{@cooking_time_minutes} min" %>
              <% end %>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="flex justify-between w-1/2">
       <div>
        <%= link_to "Generate shopping list" , general_shopping_lists_path , class: 'border bg-blue-500 px-3 py-1 text-white rounded-md' %>
      </div>
      <div>
        <%= link_to "Add ingredient",  new_recipe_recipe_food_path(@recipe.id), class: 'border bg-blue-500 px-3 py-1 text-white rounded-md' %>
      </div>
    </div>
    <div class='w-1/2'>
          <table class="border">
            <thead class="border">
                <tr>
                <th class="p-2">Food</th>
                <th class="p-2">Quantity</th>
                <th class="p-2">Value</th>
                <th class="p-2">Action</th>
                </tr>
            </thead>
  <tbody >
<% unless @recipe.recipe_foods.empty?%>
    <tr >
    <% @recipe.recipe_foods.each do |recipe_food|%>
      <td class="p-2"><%= recipe_food.food.name %></td>
      <td class="p-2"><%= recipe_food.quantity %></td>
      <td class="p-2"><%= recipe_food.total_price %></td>
      <td class="p-2">
        <%= button_to 'Delete', recipe_recipe_food_path(recipe_id: @recipe.id, id: recipe_food.id ), method: :delete, class: 'border px-3 py-1 text-white bg-red-500 rounded-lg hover:scale-105 transition-all float-right' %>
      </td>

    </tr>
     <%end%>  
       <% else %>
      <tr>
        <td colspan="4">No items available.</td>
      </tr>
    <% end %>
  </tbody>
</table>
    </div>
  </div>
</section>

<script>
 function togglePublic(checkbox) {
    var form = checkbox.closest("form");
    var recipeId = form.dataset.recipeId;
    var url = form.dataset.url;

    var formData = new FormData();
    formData.append("recipe_id", recipeId);

    fetch(url, {
      method: "PATCH",
      body: formData,
      headers: {
        "X-CSRF-Token": document.querySelector("meta[name=csrf-token]").content
      }
    })
      .then(response => response.json())
      .then(data => {
        // Handle the response from the server if needed
        console.log(data);
      })
      .catch(error => {
        // Handle errors if any
        console.error(error);
      });
  }
</script>